<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>101</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourier</FUNCTION>
    <DECORATED>?applyFourier@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1H@Z</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>124</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourierWindowedSimple</FUNCTION>
    <DECORATED>?applyFourierWindowedSimple@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1HH@Z</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>145</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourierWindowedSimple</FUNCTION>
    <DECORATED>?applyFourierWindowedSimple@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1HH@Z</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>173</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourierWindowed</FUNCTION>
    <DECORATED>?applyFourierWindowed@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1HHH@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>193</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourierWindowed</FUNCTION>
    <DECORATED>?applyFourierWindowed@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1HHH@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>195</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourierWindowed</FUNCTION>
    <DECORATED>?applyFourierWindowed@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1HHH@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>243</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourierWindowed</FUNCTION>
    <DECORATED>?applyFourierWindowed@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1HHH@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>applyFourierWindowed</FUNCTION>
    <DECORATED>?applyFourierWindowed@@YAXV?$vector@FV?$allocator@F@std@@@std@@AEAV?$vector@MV?$allocator@M@std@@@2@1HHH@Z</DECORATED>
    <FUNCLINE>150</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\flyro\source\repos\wavGUIsimple\wavGUIsimple\</FILEPATH>
      <FILENAME>Source.cpp</FILENAME>
      <LINE>665</LINE>
      <COLUMN>103</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>283</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>